{"version":3,"file":"static/js/810.a6486441.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","webpack://samurai-way/./src/components/Users/UserCard/UserCard.module.css?869d","components/Users/UserCard/UserCard.tsx","components/common/CustomPagination/CustomPagination.tsx","components/Users/Users.tsx","bll/selectors/usersSelectors.ts","components/Users/FindUsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersContainer\":\"Users_usersContainer__w26hA\",\"sidebar\":\"Users_sidebar__JWEbP\",\"usersCards\":\"Users_usersCards__VNnPk\"};","// extracted by mini-css-extract-plugin\nexport default {\"userCardContainer\":\"UserCard_userCardContainer__6fE59\",\"avatar\":\"UserCard_avatar__5DySW\",\"userInfo\":\"UserCard_userInfo__frGcm\",\"userLocation\":\"UserCard_userLocation__obcWM\",\"avatarAndButton\":\"UserCard_avatarAndButton__X7oJY\",\"name\":\"UserCard_name__axQnN\"};","import {UsersType} from \"../../../bll/store\";\nimport s from './UserCard.module.css'\nimport {Button} from \"@material-ui/core\";\nimport noAvatarImg from '../../../IMG/no_avatar_img.webp'\nimport {NavLink} from \"react-router-dom\";\nimport {FC} from \"react\";\n\ntype UserCardProps = {\n    userInfo: UsersType\n    followingInProgress: number[]\n    setFollowTC: (userID: number) => void\n    setUnFollowTC: (userID: number) => void\n\n}\nexport const UserCard: FC<UserCardProps> = ({userInfo, setFollowTC, setUnFollowTC, followingInProgress}) => {\n    const setFollowHandler = () => {\n        setFollowTC(userInfo.id)\n    }\n    const setUnfollowHandler = () => {\n        setUnFollowTC(userInfo.id)\n    }\n    const button = !userInfo.followed\n        ? <Button size='small'\n                  variant='outlined'\n                  color='primary'\n                  disabled={followingInProgress.some(id => id === userInfo.id)}\n                  onClick={setFollowHandler}>\n            FOLLOW\n        </Button>\n        : <Button size='small'\n                  variant='outlined'\n                  color='secondary'\n                  disabled={followingInProgress.some(id => id === userInfo.id)}\n                  onClick={setUnfollowHandler}>\n            UNFOLLOW\n        </Button>\n\n    return (\n        <div className={s.userCardContainer}>\n            <div className={s.avatarAndButton}>\n                <NavLink to={'/profile/' + userInfo.id}>\n                    <img className={s.avatar}\n                         alt={'avatar'}\n                         src={userInfo.photos.large !== null ? userInfo.photos.large : noAvatarImg}/>\n                </NavLink>\n                {button}\n            </div>\n            <div className={s.userInfo}>\n                <NavLink to={'/profile/' + userInfo.id}>\n                    <div className={s.name}>{userInfo.name}</div>\n                </NavLink>\n                <div>Status: {userInfo.status}</div>\n            </div>\n        </div>\n    )\n}","import React, {FC, useEffect} from \"react\";\nimport {TablePagination} from \"@material-ui/core\";\n\ntype CustomPaginationPropsType = {\n    totalUsersCount: number\n    currentPage: number\n    pageSize: number\n    onPageChanged: (page: number, pageSize?: number) => void\n}\nexport const CustomPagination: FC<CustomPaginationPropsType> = ({\n                                                                    totalUsersCount,\n                                                                    pageSize,\n                                                                    onPageChanged,\n                                                                    currentPage\n                                                                }) => {\n    const [rowsPerPage, setRowsPerPage] = React.useState(pageSize);\n    useEffect(() => {\n        if (pageSize === rowsPerPage) return\n        setRowsPerPage(pageSize)\n    }, [pageSize])\n\n    const handleChangeRowsPerPage = (\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    ) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        onPageChanged(1, parseInt(event.target.value, 10))\n    };\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => {\n        onPageChanged(page + 1, rowsPerPage)\n    };\n    return (\n        <TablePagination\n            component=\"div\"\n            labelRowsPerPage=\"Users per page:\"\n            count={totalUsersCount}\n            page={currentPage - 1}\n            onPageChange={handleChangePage}\n            rowsPerPage={rowsPerPage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n    )\n}","import s from \"./Users.module.css\";\nimport {UserCard} from \"./UserCard/UserCard\";\nimport React, {FC} from \"react\";\nimport {UsersType} from \"../../bll/store\";\nimport {CustomPagination} from \"../common/CustomPagination/CustomPagination\";\n\ntype UsersPropsType = {\n    users: UsersType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    followingInProgress: number[]\n    setFollowTC: (userID: number) => void\n    setUnFollowTC: (userID: number) => void\n    onPageChanged: (pageNumber: number) => void\n\n}\nexport const Users: FC<UsersPropsType> = ({users,\n                                              totalUsersCount,\n                                              onPageChanged, currentPage,\n                                              pageSize,\n                                              setFollowTC,\n                                              setUnFollowTC,\n                                              followingInProgress}) => {\n    return (\n        <div className='content'>\n\n            <div className={s.usersContainer}>\n                <div className={s.sidebar}>\n                </div>\n                <div className={s.usersCards}>\n                    <CustomPagination currentPage={currentPage}\n                                      totalUsersCount={totalUsersCount}\n                                      pageSize={pageSize}\n                                      onPageChanged={onPageChanged}/>\n                    {\n                        users.map(elem => <UserCard key={elem.id}\n                                                       userInfo={elem}\n                                                       followingInProgress={followingInProgress}\n                                                       setFollowTC={setFollowTC}\n                                                       setUnFollowTC={setUnFollowTC}/>)\n                    }\n                </div>\n            </div>\n\n        </div>\n    )\n}","import {stateType} from \"../redux-store\";\nimport {UsersType} from \"../store\";\n// import {createSelector, Selector} from \"reselect\";\n\n\nexport const getUsers = (state: stateType): UsersType[] => {\n    return state.usersPage.users\n}\n\n//пример использования и типизации мемоизированного селектора (для сложных вычисляемых селекторов)\n// export const getUsersFilter  = createSelector<[Selector<stateType, UsersType[]>], UsersType[]>(getUsers, (users) => {\n//    return users.filter(elem => true)\n// });\n\n\nexport const getPageSize = (state: stateType) => {\n    return state.usersPage.pageSize\n}\nexport const getCurrentPage = (state: stateType) => {\n    return state.usersPage.currentPage\n}\nexport const getTotalUsersCount = (state: stateType) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getUsersIsFetching = (state: stateType) => {\n    return state.usersPage.isFetching\n}\nexport const getUserFollowingInProgress = (state: stateType) => {\n    return state.usersPage.followingInProgress\n}","import {UsersType} from \"../../bll/store\";\nimport {connect} from \"react-redux\";\nimport {\n    getUsersTC,\n    SetCurrentPageAC, setFollowTC, SetPageSizeAC, setUnFollowTC,\n\n} from \"../../bll/reducers/usersReducer\";\nimport React from \"react\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getPageSize,\n    getTotalUsersCount, getUserFollowingInProgress,\n    getUsers,\n    getUsersIsFetching\n} from \"../../bll/selectors/usersSelectors\";\nimport {stateType} from \"../../bll/redux-store\";\n\n\ntype mapStateToPropsType = {\n    users: UsersType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\ntype mapDispatchToPropsType = {\n    setCurrentPage: (newCurrentPage: number) => void\n    setPageSize: (pageSize: number) => void\n    getUsersTC: (currentPage: number, pageSize: number) => void\n    setFollowTC: (userID: number) => void\n    setUnFollowTC: (userID: number) => void\n}\ntype FindUsersProps = mapStateToPropsType & mapDispatchToPropsType\n\n\nclass FindUsersAPIComponent extends React.Component<FindUsersProps> { //React.Component<PROPS_Type, COMPONENT_LOCAL_STATE_Type>\n    componentDidMount() {\n        const {getUsersTC, currentPage, pageSize} = this.props\n        getUsersTC(currentPage, pageSize)\n    }\n\n    render() {\n        return (\n            <>\n                {this.props.isFetching && <Preloader/>}\n                {!this.props.isFetching && <Users users={this.props.users}\n                                                  totalUsersCount={this.props.totalUsersCount}\n                                                  pageSize={this.props.pageSize}\n                                                  followingInProgress={this.props.followingInProgress}\n                                                  onPageChanged={this.onPageChanged}\n                                                  currentPage={this.props.currentPage}\n                                                  setFollowTC={this.props.setFollowTC}\n                                                  setUnFollowTC={this.props.setUnFollowTC}/>}\n            </>\n        )\n    }\n\n    onPageChanged = (newPageNumber: number, pageSize: number = 10) => {\n        this.props.getUsersTC(newPageNumber, pageSize)\n    }\n}\n\n\nconst mapStateToProps = (state: stateType): mapStateToPropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getUsersIsFetching(state),\n        followingInProgress: getUserFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    // withAuthRedirect,\n    connect(mapStateToProps,\n        {\n            setCurrentPage: SetCurrentPageAC,\n            setPageSize: SetPageSizeAC,\n            getUsersTC: getUsersTC,\n            setFollowTC: setFollowTC,\n            setUnFollowTC: setUnFollowTC\n        } as mapDispatchToPropsType))\n(FindUsersAPIComponent)\n"],"names":["UserCard","userInfo","setFollowTC","setUnFollowTC","followingInProgress","button","followed","Button","size","variant","color","disabled","some","id","onClick","className","s","to","alt","src","photos","large","noAvatarImg","name","status","CustomPagination","totalUsersCount","pageSize","onPageChanged","currentPage","React","rowsPerPage","setRowsPerPage","useEffect","TablePagination","component","labelRowsPerPage","count","page","onPageChange","event","onRowsPerPageChange","parseInt","target","value","Users","users","map","elem","getUsers","state","usersPage","getPageSize","getCurrentPage","getTotalUsersCount","getUsersIsFetching","isFetching","getUserFollowingInProgress","FindUsersAPIComponent","newPageNumber","props","getUsersTC","this","Preloader","compose","connect","setCurrentPage","SetCurrentPageAC","setPageSize","SetPageSizeAC"],"sourceRoot":""}