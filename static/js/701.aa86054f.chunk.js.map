{"version":3,"file":"static/js/701.aa86054f.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Login/Login.module.css?3530","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/common/FormsControls/CheckboxTC/CheckboxTC.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","components/common/FormsControls/ButtonSubmit/ButtonSubmit.tsx","components/common/FormsControls/TextareaTC/TextareaFC.tsx","utils/validators/validators.ts","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__XiMTb\",\"form\":\"Login_form__xawx9\",\"data\":\"Login_data__AkOnl\",\"title\":\"Login_title__vcg8P\",\"button\":\"Login_button__OdYu-\",\"error\":\"Login_error__ByltQ\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import {FC} from \"react\";\nimport {WrappedFieldProps} from \"redux-form\";\nimport {Checkbox, CheckboxProps, FormControlLabel, FormControlLabelProps} from \"@material-ui/core\";\n\n\nexport const CheckboxTC: FC<WrappedFieldProps & CheckboxProps & FormControlLabelProps> = ({\n                                                                                       input,\n                                                                                       label\n                                                                                   }) => (\n    <FormControlLabel\n        control={\n            <Checkbox\n                checked={input.value ? true : false}\n                onChange={input.onChange}\n                color='primary'\n            />\n        }\n        label={label}\n    />\n);","import React, {FC} from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport s from \"../Login.module.css\";\nimport {TextareaFC} from \"../../common/FormsControls/TextareaTC/TextareaFC\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {CheckboxTC} from \"../../common/FormsControls/CheckboxTC/CheckboxTC\";\nimport {ButtonSubmit} from \"../../common/FormsControls/ButtonSubmit/ButtonSubmit\";\n\nexport type FormDataType = {\n    login: string\n    password: string\n    rememberMe: boolean\n}\nconst LoginForm: FC<InjectedFormProps<FormDataType>> = (props) => {\n    const {handleSubmit, error} = props\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            {error && <div className={s.error}> { error } </div>}\n            <div className={s.data}>\n                <Field placeholder='Email'\n                       type='text'\n                       name='login'\n                       variant='standard'\n                       component={TextareaFC}\n                       validate={[required]}\n                />\n            </div>\n            <div className={s.data}>\n                <Field placeholder='Password'\n                       type='password'\n                       name='password'\n                       variant='standard'\n                       component={TextareaFC}\n                       validate={[required]}\n                />\n            </div>\n            <div className={s.data}>\n                <Field type='checkbox'\n                       component={CheckboxTC}\n                       label='remember me'/>\n            </div>\n\n            <div className={s.button}>\n                <ButtonSubmit form={LoginForm}/>\n            </div>\n        </form>\n    )\n}\nexport const LoginReduxForm = reduxForm<FormDataType>({\n    // a unique name for the form\n    form: 'login'\n})(LoginForm)","import s from './Login.module.css'\nimport React, {FC} from \"react\";\nimport {connect} from \"react-redux\";\nimport {loginTC} from \"../../bll/reducers/authReducer\";\nimport {stateType} from \"../../bll/redux-store\";\nimport {Redirect} from \"react-router-dom\";\nimport {FormDataType, LoginReduxForm} from \"./LoginForm/LoginForm\";\n\n\ntype LoginType = {\n    loginTC: (email: string, password: string, rememberMe: boolean) => void\n    isAuth: boolean\n}\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\nconst mapStateToProps = (state: stateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\nconst Login:FC<LoginType> = ({loginTC, isAuth}) => {\n    const onSubmit = (data: FormDataType) => {\n        loginTC(data.login, data.password, data.rememberMe)\n    }\n    if (isAuth) {\n        return <Redirect to='/profile'/>\n    }\n    return (\n        <div className='content'>\n            <div className={s.container}>\n                <h2 className={s.title}> LOGIN </h2>\n                <LoginReduxForm onSubmit={onSubmit}/>\n            </div>\n        </div>\n    )\n}\nexport default connect(mapStateToProps, {loginTC})(Login)\n\n\n","import React, {FC} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { submit } from \"redux-form\";\nimport { Button } from \"@material-ui/core\";\n\ntype ButtonSubmitProps = {\n    form: any\n}\nexport const ButtonSubmit: FC<ButtonSubmitProps> = ({form}) => {\n    const dispatch = useDispatch();\n\n    const onClickSubmit = () => {\n        dispatch(submit(form));\n    };\n\n    return (\n        <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={onClickSubmit}\n        >\n            Send\n        </Button>\n    );\n};","import React, {FC} from \"react\";\nimport {TextField, TextFieldProps} from \"@material-ui/core\";\nimport {WrappedFieldProps} from \"redux-form\";\n\nexport const TextareaFC: FC<WrappedFieldProps & TextFieldProps> = ({\n                                                                       input,\n                                                                       placeholder,\n                                                                       variant,\n                                                                       type,\n                                                                       meta: {touched, error},\n                                                                       ...custom\n                                                                   }) => {\n    return (\n        <TextField {...input}\n                   style={{marginBottom: '10px'}}\n                   error={touched && error}\n                   helperText={touched && error}\n                   fullWidth\n                   label={placeholder}\n                   type={type}\n                   variant={variant ? variant : 'outlined'}\n                   size='small'/>\n    )\n}","export const required = (value: string) => {\n    return value ? undefined : 'Field is required'\n}\n\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    return (value && value.length > maxLength) ? `Max length is ${maxLength} symbols` : undefined\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","CheckboxTC","LoginReduxForm","reduxForm","form","LoginForm","handleSubmit","error","onSubmit","s","Field","placeholder","variant","TextareaFC","validate","ButtonSubmit","connect","isAuth","auth","loginTC","to","data","login","password","rememberMe","dispatch","useDispatch","onClick","submit","meta","touched","style","marginBottom","helperText","fullWidth","maxLengthCreator","maxLength","length","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","Component","typography","caption","button","overline","srOnly","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorTextPrimary","colorTextSecondary","colorError","displayInline","displayBlock"],"sourceRoot":""}